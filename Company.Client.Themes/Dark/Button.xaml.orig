<<<<<<< HEAD
ï»¿<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
=======
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
>>>>>>> origin/feature/Client.Wpf.Themes
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/BaltBet.Client.Themes;component/Fonts/Fonts.xaml" />
        <ResourceDictionary Source="/BaltBet.Client.Themes;component/Dark/Colors.xaml" />
        <ResourceDictionary Source="/BaltBet.Client.Themes;component/Dark/Path.xaml" />
        <ResourceDictionary Source="/BaltBet.Client.Themes;component/Drawing/Geometry/GeometryGroups.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Style.Button.Transparent"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0,1,0,0" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="{StaticResource Font.OpenSans}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Style.Button.Link"
           BasedOn="{StaticResource Style.Button.Transparent}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color2}" />
        <Setter Property="FontFamily" Value="{StaticResource Font.OpenSans}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color4}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color3}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Style.Button.Default"
           BasedOn="{StaticResource Style.Button.Transparent}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Brush.Color6}" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color4}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="MinWidth" Value="116" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color1}" />
                <Setter Property="Background" Value="{DynamicResource Brush.Color6.5}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color3}" />
                <Setter Property="Background" Value="{DynamicResource Brush.BackgroundSecond}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Style.Button.RoundPlusButton"
           BasedOn="{StaticResource Style.Button.Link}"
           TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color1}" />
<<<<<<< HEAD
        <Setter Property="Background" Value="{DynamicResource Brush.Color4}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="36"
                            Height="36"
                            Background="{TemplateBinding Background}"
                            CornerRadius="18">
                        <Path Width="13"
                              Height="13"
                              Data="{StaticResource Drawing.Geometry.Plus}"
                              Style="{StaticResource Style.Path.ForegroundFill}" />
                    </Border>
                </ControlTemplate>
=======
        <Setter Property="Content">
            <Setter.Value>
                <Border Width="36"
                        Height="36"
                        Background="{DynamicResource Brush.Color4}"
                        CornerRadius="18">
                    <Path Width="13"
                          Height="13"
                          Data="{StaticResource Drawing.Geometry.Plus}"
                          Style="{StaticResource Style.Path.ForegroundFill}" />
                </Border>
>>>>>>> origin/feature/Client.Wpf.Themes
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Style.Button.Border"
           BasedOn="{StaticResource Style.Button.Transparent}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color4}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Border.CornerRadius" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Color6}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Color3}" />
                <Setter Property="Background" Value="{DynamicResource Brush.BackgroundSecond}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>